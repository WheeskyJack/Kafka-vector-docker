services:
  kafka:
    # scripts are present in /opt/bitnami/kafka/bin path
    # /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server localhost:9092
    image: bitnami/kafka:3.5.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_started

  kafka-init:
    image: 'bitnami/kafka:3.5.1'
    container_name: 'kafka-init'
    environment:
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    command: /opt/bitnami/kafka/bin/kafka-topics.sh --create --topic example-topic --bootstrap-server kafka:29092 --partitions 3 --replication-factor 1
    depends_on:
      kafka:
        condition: service_started

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  vector:
    image: timberio/vector:0.43.1-alpine
    container_name: vector
    volumes:
      - ./vector_config.toml:/etc/vector/vector.toml:ro
      - ./vector_output:/var/lib/vector:rw # Directory to save the output log file
    environment:
      - VECTOR_LOG=debug
    depends_on:
      kafka-init:
        condition: service_completed_successfully

    command: --config /etc/vector/vector.toml